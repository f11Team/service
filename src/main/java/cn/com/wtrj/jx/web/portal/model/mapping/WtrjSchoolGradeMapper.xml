<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.wtrj.jx.web.portal.model.dao.WtrjSchoolGradeMapper" >
  <resultMap id="BaseResultMap" type="cn.com.wtrj.jx.web.portal.model.entities.WtrjSchoolGradeKey" >
    <id column="GRADE" property="grade" jdbcType="DECIMAL" />
    <id column="SCHOOL_CODE" property="schoolCode" jdbcType="VARCHAR" />
    <id column="STAGE" property="stage" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    GRADE, SCHOOL_CODE, STAGE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.wtrj.jx.web.portal.model.entities.WtrjSchoolGradeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from WTRJ_SCHOOL_GRADE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.com.wtrj.jx.web.portal.model.entities.WtrjSchoolGradeKey" >
    delete from WTRJ_SCHOOL_GRADE
    where GRADE = #{grade,jdbcType=DECIMAL}
      and SCHOOL_CODE = #{schoolCode,jdbcType=VARCHAR}
      and STAGE = #{stage,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.wtrj.jx.web.portal.model.entities.WtrjSchoolGradeExample" >
    delete from WTRJ_SCHOOL_GRADE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.wtrj.jx.web.portal.model.entities.WtrjSchoolGradeKey" >
    insert into WTRJ_SCHOOL_GRADE (GRADE, SCHOOL_CODE, STAGE
      )
    values (#{grade,jdbcType=DECIMAL}, #{schoolCode,jdbcType=VARCHAR}, #{stage,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.wtrj.jx.web.portal.model.entities.WtrjSchoolGradeKey" >
    insert into WTRJ_SCHOOL_GRADE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="grade != null" >
        GRADE,
      </if>
      <if test="schoolCode != null" >
        SCHOOL_CODE,
      </if>
      <if test="stage != null" >
        STAGE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="grade != null" >
        #{grade,jdbcType=DECIMAL},
      </if>
      <if test="schoolCode != null" >
        #{schoolCode,jdbcType=VARCHAR},
      </if>
      <if test="stage != null" >
        #{stage,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.wtrj.jx.web.portal.model.entities.WtrjSchoolGradeExample" resultType="java.lang.Integer" >
    select count(*) from WTRJ_SCHOOL_GRADE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update WTRJ_SCHOOL_GRADE
    <set >
      <if test="record.grade != null" >
        GRADE = #{record.grade,jdbcType=DECIMAL},
      </if>
      <if test="record.schoolCode != null" >
        SCHOOL_CODE = #{record.schoolCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stage != null" >
        STAGE = #{record.stage,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update WTRJ_SCHOOL_GRADE
    set GRADE = #{record.grade,jdbcType=DECIMAL},
      SCHOOL_CODE = #{record.schoolCode,jdbcType=VARCHAR},
      STAGE = #{record.stage,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>